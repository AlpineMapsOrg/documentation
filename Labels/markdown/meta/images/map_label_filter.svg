<?xml version="1.0" encoding="UTF-8" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentScriptType="application/ecmascript" contentStyleType="text/css" height="694px" preserveAspectRatio="none" style="width:1409px;height:694px;" version="1.1" viewBox="0 0 1409 694" width="1409px" zoomAndPan="magnify"><defs><filter height="300%" id="f2i63dde8rir8" width="300%" x="-1" y="-1"><feGaussianBlur result="blurOut" stdDeviation="2.0"/><feColorMatrix in="blurOut" result="blurOut2" type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 .4 0"/><feOffset dx="4.0" dy="4.0" in="blurOut2" result="blurOut3"/><feBlend in="SourceGraphic" in2="blurOut3" mode="normal"/></filter></defs><g><!--MD5=[5a3bbf0d7091cd7a553e0617d3c8fdbb]
cluster nucleus--><polygon fill="#FFFFFF" filter="url(#f2i63dde8rir8)" points="22,24,90,24,97,46.2969,1387,46.2969,1387,682,22,682,22,24" style="stroke: #000000; stroke-width: 1.5;"/><line style="stroke: #000000; stroke-width: 1.5;" x1="22" x2="97" y1="46.2969" y2="46.2969"/><text fill="#000000" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacingAndGlyphs" textLength="62" x="26" y="38.9951">nucleus</text><!--MD5=[d834082772847ab0941a616e0a3c77d7]
cluster nucleus.maplabel--><polygon fill="#FFFFFF" filter="url(#f2i63dde8rir8)" points="46,67,122,67,129,89.2969,1363,89.2969,1363,658,46,658,46,67" style="stroke: #000000; stroke-width: 1.5;"/><line style="stroke: #000000; stroke-width: 1.5;" x1="46" x2="129" y1="89.2969" y2="89.2969"/><text fill="#000000" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacingAndGlyphs" textLength="70" x="50" y="81.9951">maplabel</text><!--MD5=[3f48f851ba0a656eed8554a052c49294]
class nucleus.maplabel.Charset--><rect fill="#FEFECE" filter="url(#f2i63dde8rir8)" height="188.8516" id="nucleus.maplabel.Charset" style="stroke: #A80036; stroke-width: 1.5;" width="381" x="966.5" y="140.5"/><ellipse cx="1128.25" cy="156.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M1131.2188,162.1406 Q1130.6406,162.4375 1130,162.5781 Q1129.3594,162.7344 1128.6563,162.7344 Q1126.1563,162.7344 1124.8281,161.0938 Q1123.5156,159.4375 1123.5156,156.3125 Q1123.5156,153.1875 1124.8281,151.5313 Q1126.1563,149.875 1128.6563,149.875 Q1129.3594,149.875 1130,150.0313 Q1130.6563,150.1875 1131.2188,150.4844 L1131.2188,153.2031 Q1130.5938,152.625 1130,152.3594 Q1129.4063,152.0781 1128.7813,152.0781 Q1127.4375,152.0781 1126.75,153.1563 Q1126.0625,154.2188 1126.0625,156.3125 Q1126.0625,158.4063 1126.75,159.4844 Q1127.4375,160.5469 1128.7813,160.5469 Q1129.4063,160.5469 1130,160.2813 Q1130.5938,160 1131.2188,159.4219 L1131.2188,162.1406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="49" x="1148.75" y="160.6543">Charset</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="967.5" x2="1346.5" y1="172.5" y2="172.5"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="974.5" y="180.5"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="198" x="986.5" y="186.7104">m_file_mutex : mutable std::mutex</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="974.5" y="193.3047"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="191" x="986.5" y="199.5151">m_all_chars : std::set&lt;char16_t&gt;</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="967.5" x2="1346.5" y1="206.1094" y2="206.1094"/><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="974.5" y="214.1094"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="53" x="986.5" y="220.3198">Charset()</text><ellipse cx="977.5" cy="229.9141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="147" x="986.5" y="233.1245">get_instance() : Charset&amp;</text><ellipse cx="977.5" cy="242.7188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="275" x="986.5" y="245.9292">is_update_necessary(std::size_t last_size) : bool</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="974.5" y="252.5234"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="251" x="986.5" y="258.7339">charset_cache_path() : std::filesystem::path</text><ellipse cx="977.5" cy="268.3281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="182" x="986.5" y="271.5386">all_chars() : std::set&lt;char16_t&gt;</text><ellipse cx="977.5" cy="281.1328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="355" x="986.5" y="284.3433">char_diff(std::set&lt;char16_t&gt;&amp; compare) : std::set&lt;char16_t&gt;</text><ellipse cx="977.5" cy="293.9375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="288" x="986.5" y="297.1479">add_chars(std::set&lt;char16_t&gt;&amp; new_chars) : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="974.5" y="303.7422"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="60" x="986.5" y="309.9526">init() : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="974.5" y="316.5469"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="266" x="986.5" y="322.7573">load(const std::filesystem::path filepath) : void</text><!--MD5=[11c6c8807e03fe03c404293017f70086]
class nucleus.maplabel.MapLabelFilter--><rect fill="#FEFECE" filter="url(#f2i63dde8rir8)" height="265.6797" id="nucleus.maplabel.MapLabelFilter" style="stroke: #A80036; stroke-width: 1.5;" width="869" x="62.5" y="102"/><ellipse cx="447.75" cy="118" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M450.7188,123.6406 Q450.1406,123.9375 449.5,124.0781 Q448.8594,124.2344 448.1563,124.2344 Q445.6563,124.2344 444.3281,122.5938 Q443.0156,120.9375 443.0156,117.8125 Q443.0156,114.6875 444.3281,113.0313 Q445.6563,111.375 448.1563,111.375 Q448.8594,111.375 449.5,111.5313 Q450.1563,111.6875 450.7188,111.9844 L450.7188,114.7031 Q450.0938,114.125 449.5,113.8594 Q448.9063,113.5781 448.2813,113.5781 Q446.9375,113.5781 446.25,114.6563 Q445.5625,115.7188 445.5625,117.8125 Q445.5625,119.9063 446.25,120.9844 Q446.9375,122.0469 448.2813,122.0469 Q448.9063,122.0469 449.5,121.7813 Q450.0938,121.5 450.7188,120.9219 L450.7188,123.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="90" x="468.25" y="122.1543">MapLabelFilter</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="63.5" x2="930.5" y1="134" y2="134"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="70.5" y="142"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="176" x="82.5" y="148.2104">m_definitions : FilterDefinitions</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="70.5" y="154.8047"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="179" x="82.5" y="161.0151">m_all_features : TiledVectorTile</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="70.5" y="167.6094"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="202" x="82.5" y="173.8198">m_visible_features : TiledVectorTile</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="70.5" y="180.4141"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="148" x="82.5" y="186.6245">m_filter_should_run : bool</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="70.5" y="193.2188"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="240" x="82.5" y="199.4292">m_update_filter_time : constexpr static int</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="70.5" y="206.0234"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="216" x="82.5" y="212.2339">m_tiles_to_filter : std::queue&lt;tile::Id&gt;</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="70.5" y="218.8281"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="282" x="82.5" y="225.0386">m_update_filter_timer : std::unique_ptr&lt;QTimer&gt;</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="70.5" y="231.6328"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="326" x="82.5" y="237.8433">m_all_tiles : std::unordered_set&lt;tile::Id, tile::Id::Hasher&gt;</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="70.5" y="244.4375"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="223" x="82.5" y="250.6479">m_removed_tiles : std::vector&lt;tile::Id&gt;</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="63.5" x2="930.5" y1="257.2422" y2="257.2422"/><ellipse cx="73.5" cy="268.2422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="181" x="82.5" y="271.4526">MapLabelFilter(QObject* parent)</text><ellipse cx="73.5" cy="281.0469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="646" x="82.5" y="284.2573">filter_finished(const TiledVectorTile&amp; visible_features, const std::vector&lt;tile::Id&gt;&amp; removed_tiles) : signals : void</text><ellipse cx="73.5" cy="293.8516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="351" x="82.5" y="297.062">add_tile(const tile::Id id, const VectorTile&amp; all_features) : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="70.5" y="303.6563"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="212" x="82.5" y="309.8667">apply_filter(const tile::Id tile_id) : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="70.5" y="316.4609"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="69" x="82.5" y="322.6714">filter() : void</text><ellipse cx="73.5" cy="332.2656" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="193" x="82.5" y="335.4761">remove_tile(const tile::Id id) : void</text><ellipse cx="73.5" cy="345.0703" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="342" x="82.5" y="348.2808">update_filter(const FilterDefinitions&amp; filter_definitions) : void</text><ellipse cx="73.5" cy="357.875" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="843" x="82.5" y="361.0854">update_quads(const std::vector&lt;nucleus::tile_scheduler::tile_types::GpuTileQuad&gt;&amp; new_quads, const std::vector&lt;tile::Id&gt;&amp; deleted_quads) : void</text><!--MD5=[92a10119e1ef07bc0f52d3385f47b370]
class nucleus.maplabel.FilterDefinitions--><rect fill="#FEFECE" filter="url(#f2i63dde8rir8)" height="214.4609" id="nucleus.maplabel.FilterDefinitions" style="stroke: #A80036; stroke-width: 1.5;" width="324" x="335" y="428"/><ellipse cx="444.25" cy="444" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M447.2188,449.6406 Q446.6406,449.9375 446,450.0781 Q445.3594,450.2344 444.6563,450.2344 Q442.1563,450.2344 440.8281,448.5938 Q439.5156,446.9375 439.5156,443.8125 Q439.5156,440.6875 440.8281,439.0313 Q442.1563,437.375 444.6563,437.375 Q445.3594,437.375 446,437.5313 Q446.6563,437.6875 447.2188,437.9844 L447.2188,440.7031 Q446.5938,440.125 446,439.8594 Q445.4063,439.5781 444.7813,439.5781 Q443.4375,439.5781 442.75,440.6563 Q442.0625,441.7188 442.0625,443.8125 Q442.0625,445.9063 442.75,446.9844 Q443.4375,448.0469 444.7813,448.0469 Q445.4063,448.0469 446,447.7813 Q446.5938,447.5 447.2188,446.9219 L447.2188,449.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="97" x="464.75" y="448.1543">FilterDefinitions</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="336" x2="658" y1="460" y2="460"/><ellipse cx="346" cy="471" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="212" x="355" y="474.2104">m_city_population_range : QVector2D</text><ellipse cx="346" cy="483.8047" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="193" x="355" y="487.0151">m_cottage_ele_range : QVector2D</text><ellipse cx="346" cy="496.6094" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="178" x="355" y="499.8198">m_peak_ele_range : QVector2D</text><ellipse cx="346" cy="509.4141" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="232" x="355" y="512.6245">m_peaks_visible : Q_GADGET public:bool</text><ellipse cx="346" cy="522.2188" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="125" x="355" y="525.4292">m_cities_visible : bool</text><ellipse cx="346" cy="535.0234" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="169" x="355" y="538.2339">m_cottage_has_contact : bool</text><ellipse cx="346" cy="547.8281" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="170" x="355" y="551.0386">m_cottage_has_shower : bool</text><ellipse cx="346" cy="560.6328" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="144" x="355" y="563.8433">m_cottages_visible : bool</text><ellipse cx="346" cy="573.4375" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="145" x="355" y="576.6479">m_peak_has_cross : bool</text><ellipse cx="346" cy="586.2422" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="158" x="355" y="589.4526">m_peak_has_register : bool</text><ellipse cx="346" cy="599.0469" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="149" x="355" y="602.2573">m_webcams_visible : bool</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="336" x2="658" y1="608.8516" y2="608.8516"/><ellipse cx="346" cy="619.8516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="292" x="355" y="623.062">operator!=(const FilterDefinitions &amp;) : bool {query}</text><ellipse cx="346" cy="632.6563" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="298" x="355" y="635.8667">operator==(const FilterDefinitions &amp;) : bool {query}</text><!--MD5=[083df11f4217a853633896ca4a0080ad]
reverse link nucleus.maplabel.MapLabelFilter to nucleus.maplabel.FilterDefinitions--><path d="M497,381.13 C497,396.78 497,412.5 497,427.57 " fill="none" id="nucleus.maplabel.MapLabelFilter&lt;-nucleus.maplabel.FilterDefinitions" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="497,368.01,493,374.01,497,380.01,501,374.01,497,368.01" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[e692bf6fe8a48842988bf350ddf5dd7c]
@startuml






namespace nucleus {
	namespace maplabel {
		class Charset {
			-Charset()
			+{static} get_instance() : Charset&
			+is_update_necessary(std::size_t last_size) : bool
			-m_file_mutex : mutable std::mutex
			-charset_cache_path() : std::filesystem::path
			+all_chars() : std::set<char16_t>
			+char_diff(std::set<char16_t>& compare) : std::set<char16_t>
			-m_all_chars : std::set<char16_t>
			+add_chars(std::set<char16_t>& new_chars) : void
			-init() : void
			-load(const std::filesystem::path filepath) : void
		}

		class MapLabelFilter {
			+MapLabelFilter(QObject* parent)
			-m_definitions : FilterDefinitions
			-m_all_features : TiledVectorTile
			-m_visible_features : TiledVectorTile
			-m_filter_should_run : bool
			-{static} m_update_filter_time : constexpr static int
			+filter_finished(const TiledVectorTile& visible_features, const std::vector<tile::Id>& removed_tiles) : signals : void
			-m_tiles_to_filter : std::queue<tile::Id>
			-m_update_filter_timer : std::unique_ptr<QTimer>
			-m_all_tiles : std::unordered_set<tile::Id, tile::Id::Hasher>
			-m_removed_tiles : std::vector<tile::Id>
			+add_tile(const tile::Id id, const VectorTile& all_features) : void
			-apply_filter(const tile::Id tile_id) : void
			-filter() : void
			+remove_tile(const tile::Id id) : void
			+update_filter(const FilterDefinitions& filter_definitions) : void
			+update_quads(const std::vector<nucleus::tile_scheduler::tile_types::GpuTileQuad>& new_quads, const std::vector<tile::Id>& deleted_quads) : void
		}

		class FilterDefinitions {
			+m_city_population_range : QVector2D
			+m_cottage_ele_range : QVector2D
			+m_peak_ele_range : QVector2D
			+m_peaks_visible : Q_GADGET public:bool
			+m_cities_visible : bool
			+m_cottage_has_contact : bool
			+m_cottage_has_shower : bool
			+m_cottages_visible : bool
			+m_peak_has_cross : bool
			+m_peak_has_register : bool
			+m_webcams_visible : bool
			+operator!=(const FilterDefinitions &) : bool {query}
			+operator==(const FilterDefinitions &) : bool {query}
		}
	}
}










nucleus.maplabel.MapLabelFilter *- - nucleus.maplabel.FilterDefinitions









@enduml

PlantUML version 1.2020.02(Sun Mar 01 11:22:07 CET 2020)
(GPL source distribution)
Java Runtime: OpenJDK Runtime Environment
JVM: OpenJDK 64-Bit Server VM
Java Version: 21.0.4+7-Ubuntu-1ubuntu222.04
Operating System: Linux
Default Encoding: UTF-8
Language: en
Country: US
--></g></svg>